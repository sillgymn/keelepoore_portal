<?php

/**
 * @file
 * RNG Date Scheduler.
 *
 * Adds date scheduler form class to event types, and access control for new
 * registrations.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\rng\EventTypeInterface;
use Drupal\Core\Url;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Access\AccessResult;

/**
 * Implements hook_entity_type_build().
 */
function rng_date_scheduler_entity_type_build(array &$entity_types) {
  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  $entity_types['event_type']->setFormClass('date_scheduler', 'Drupal\rng_date_scheduler\Form\EventTypeDateSchedulerForm');
}

/**
 * Implements hook_entity_operation().
 */
function rng_date_scheduler_entity_operation(EntityInterface $entity) {
  $operations = [];

  if ($entity instanceof EventTypeInterface) {
    $operations['date_scheduler'] = [
      'title' => t('Date scheduler'),
      'url' => Url::fromRoute('entity.event_type.date_scheduler', [
        'event_type' => $entity->id(),
      ]),
      'weight' => 25,
    ];
  }

  return $operations;
}

/**
 * Implements hook_entity_create_access().
 */
function rng_date_scheduler_entity_create_access(AccountInterface $account, $context, $entity_bundle) {
  $event = NULL;
  if (isset($context['entity_type_id']) && $context['entity_type_id'] == 'registration') {
    if (isset($context['event'])) {
      $event = $context['event'];
    }
  }

  if ($event instanceof EntityInterface) {
    /** @var \Drupal\rng_date_scheduler\EventDateProviderInterface $event_date_provider */
    $event_date_provider = \Drupal::service('rng_date_scheduler.event_dates');
    return $event_date_provider->getRegistrationCreateAccess($event);
  }

  return AccessResult::neutral();
}
